- hosts: all
  become: yes
  become_method: sudo
  tasks:

    - name: download minikube version {{ minikube_version }} deb
      ansible.builtin.get_url:
        url: https://github.com/kubernetes/minikube/releases/download/v{{ minikube_version }}/minikube_{{ minikube_version }}-0_amd64.deb
        dest: /var/tmp/minikube_{{ minikube_version }}-0_amd64.deb
        mode: '0644'

    - name: install minikube version {{ minikube_version }} deb
      ansible.builtin.apt:
        deb: /var/tmp/minikube_{{ minikube_version }}-0_amd64.deb

    - name: delete minikube version {{ minikube_version }} deb
      ansible.builtin.file:
        path: /var/tmp/minikube_{{ minikube_version }}-0_amd64.deb
        state: absent

    - name: add docker ubuntu apt key to system
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        state: present

    - name: install docker-ce version {{ docker_version }}
      ansible.builtin.apt:
        pkg:
          - containerd.io
          - docker-ce={{ docker_version }}
          - docker-ce-cli={{ docker_version }}
        state: present
        update_cache: true

    - name: start and enable docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started

    - name: add vagrant user to docker group
      ansible.builtin.user:
        name: vagrant
        groups: docker
        append: yes

    - name: set bridge-nf-call-iptables = 1
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: net.bridge.bridge-nf-call-iptables = 1

    - name: set fs.protected_regular = 0
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: fs.protected_regular = 0

    - name: apply sysctl config
      ansible.builtin.shell: sysctl -p

    - name: download cri-dockerd version {{ cridockerd_version }} deb
      ansible.builtin.get_url:
        url: https://github.com/Mirantis/cri-dockerd/releases/download/v{{ cridockerd_version }}/cri-dockerd_{{ cridockerd_version }}.3-0.ubuntu-focal_amd64.deb
        dest: /var/tmp/cri-dockerd_{{ cridockerd_version }}.3-0.ubuntu-focal_amd64.deb
        mode: '0644'

    - name: install cri-dockerd version {{ cridockerd_version }} deb
      ansible.builtin.apt:
        deb: /var/tmp/cri-dockerd_{{ cridockerd_version }}.3-0.ubuntu-focal_amd64.deb

    - name: delete cri-dockerd version {{ cridockerd_version }} deb
      ansible.builtin.file:
        path: /var/tmp/cri-dockerd_{{ cridockerd_version }}.3-0.ubuntu-focal_amd64.deb
        state: absent

    - name: start and enable cri-dockerd systemd service
      ansible.builtin.systemd:
        daemon_reload: yes
        name: cri-docker.service
        state: started
        enabled: yes

    - name: start and enable cri-dockerd systemd socket
      ansible.builtin.systemd:
        name: cri-docker.socket
        enabled: yes

    - name: add Google ubuntu apt key to system
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: install cri-tools version {{ critools_version }}
      ansible.builtin.apt:
        pkg:
          - cri-tools={{ critools_version }}
        state: present
        update_cache: true

    - name: start minikube
      ansible.builtin.shell: minikube start --driver=none --cni=bridge

    # TODO Remove this section if this bug ever gets fixed for real: https://github.com/Mirantis/cri-dockerd/pull/99
    # In file '/etc/systemd/system/cri-docker.service.d/10-cni.conf' '--network-plugin=' should be set to the empty string. Executing 'minikube start' again will overwrite this!
    - name: set correct network-plugin for cri-docker.service in systemd
      ansible.builtin.replace:
        path: /etc/systemd/system/cri-docker.service.d/10-cni.conf
        regexp: "--network-plugin=cni"
        replace: "--network-plugin="

    # After modifying the file, restart the cri-docker service for the Kubernetes cluster to start working
    - name: re-start cri-docker.service after network-plugin modification
      ansible.builtin.systemd:
        daemon_reload: yes
        name: cri-docker.service
        state: restarted
    # TODO Ends here

    - name: add service-node-port-range parameter to minikube config file
      ansible.builtin.lineinfile:
        state: present
        path: /etc/kubernetes/manifests/kube-apiserver.yaml
        line: '    - --service-node-port-range=1024-65535'
        insertafter: '^.*service-account-key-file.*$'

    - name: start and enable kubelet service
      ansible.builtin.service:
        name: kubelet
        enabled: yes
        state: started
    
    - name: create dir /home/vagrant/bin
      ansible.builtin.file:
        path: /home/vagrant/bin
        state: directory

    - name: install kubectl version {{ kubectl_version }}
      ansible.builtin.apt:
        pkg: kubectl={{ kubectl_version }}
        update_cache: yes
        state: present

    - name: copy kubectl conf
      ansible.builtin.copy:
        src: /root/.kube
        dest: /home/vagrant/
        remote_src: yes
        owner: vagrant
        group: vagrant

    - name: fix kubectl conf
      ansible.builtin.replace:
        path: /home/vagrant/.kube/config
        regexp: '/root'
        replace: '/home/vagrant'

    - name: enable kubectl autocompletion
      ansible.builtin.lineinfile:
        path: /home/vagrant/.bashrc
        line: source <(kubectl completion bash)
        insertafter: EOF

    - name: enable kubectl alias k
      ansible.builtin.lineinfile:
        path: /home/vagrant/.bashrc
        line: alias k="kubectl"
        insertafter: EOF

    - name: enable kubectl alias kc
      ansible.builtin.lineinfile:
        path: /home/vagrant/.bashrc
        line: alias kc="kubectl"
        insertafter: EOF

    - name: copy minikube conf
      ansible.builtin.copy:
        src: /root/.minikube
        dest: /home/vagrant/
        remote_src: yes
        owner: vagrant
        group: vagrant

    - name: download helm version {{ helm_version }}
      ansible.builtin.get_url:
        url: https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz
        dest: /var/tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz
        mode: 0755

    - name: extract helm version {{ helm_version }}
      ansible.builtin.unarchive:
        src: /var/tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz
        remote_src: yes
        dest: /home/vagrant/bin
        extra_opts:
          - "linux-amd64/helm"
          - "--strip-components=1"
        mode: 0755

    - name: delete downloaded helm version {{ helm_version }} installer
      ansible.builtin.file:
        path: /var/tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz
        state: absent

    - name: change helm executable ownership to vagrant
      ansible.builtin.file:
        path: /home/vagrant/bin/helm
        mode: 0755
        owner: vagrant
        group: vagrant
      
    - name: download kubetail version {{ kubetail_version }}
      ansible.builtin.get_url:
        url: https://codeload.github.com/johanhaleby/kubetail/tar.gz/{{ kubetail_version }}
        dest: /var/tmp/kubetail-{{ kubetail_version }}.tar.gz

    - name: extract kubetail
      ansible.builtin.unarchive:
        src: /var/tmp/kubetail-{{ kubetail_version }}.tar.gz
        dest: /opt
        remote_src: yes

    - name: install kubetail version {{ kubetail_version }}
      ansible.builtin.file:
        src: /opt/kubetail-{{ kubetail_version }}/kubetail
        dest: /usr/bin/kubetail
        state: link

    - name: delete kubetail version {{ kubetail_version }} installer
      ansible.builtin.file:
        path: /var/tmp/kubetail-{{ kubetail_version }}.tar.gz
        state: absent

    - name: create dir /opt/kubelogs
      ansible.builtin.file:
        path: /opt/kubelogs
        state: directory

    - name: download kubelogs version {{ kubelogs_version }}
      ansible.builtin.get_url:
        url: https://gitlab.com/api/v4/projects/25692176/packages/generic/kubelogs_linux_amd64/v{{ kubelogs_version }}/kubelogs_v{{ kubelogs_version }}_linux_amd64.tgz
        dest: /var/tmp/kubelogs_v{{ kubelogs_version }}_linux_amd64.tgz

    - name: extract kubelogs
      ansible.builtin.unarchive:
        src: /var/tmp/kubelogs_v{{ kubelogs_version }}_linux_amd64.tgz
        dest: /opt/kubelogs
        remote_src: yes

    - name: install kubelogs version {{ kubelogs_version }}
      ansible.builtin.file:
        src: /opt/kubelogs/kubelogs
        dest: /usr/bin/kubelogs
        state: link

    - name: delete kubelogs version {{ kubelogs_version }} installer
      ansible.builtin.file:
        path: /var/tmp/kubelogs_v{{ kubelogs_version }}_linux_amd64.tgz
        state: absent
